{"ast":null,"code":"var _jsxFileName = \"P:\\\\ZOOM\\\\frontend\\\\src\\\\pages\\\\VideoMeet.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { TextField, Button, IconButton } from '@mui/material';\nimport styles from \"../styles/VideoMeetComponentmodule.css\";\nimport io from \"socket.io-client\";\n\n// import server from '../environment'\n// import { connect } from 'mongoose';\n// import { connectToSocket } from '../../../backend/src/controller/socketManager';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst server_url = \"http://localhost:8000\";\nvar connections = {};\nconst peerConfigConnections = {\n  \"iceServers\": [{\n    \"urls\": \"stun:stun.l.google.com:19032\"\n  }]\n};\nexport default function VideoMeetComponent() {\n  _s();\n  var socketRef = useRef();\n  let socketIdRef = useRef();\n  let localVideoRef = useRef();\n  let [videoAvailable, setvideoAvailable] = useState(true);\n  let [audioAvailable, setaudioAvailable] = useState(true);\n  let [video, setVideo] = useState([]);\n  let [audio, setAudio] = useState();\n  let [screen, setScreen] = useState();\n  let [showModel, setModel] = useState();\n  let [screenAvailable, setScreenAvailable] = useState();\n  let [message, setMessage] = useState(\"\");\n  let [messages, setMessages] = useState([]);\n  let [newMessages, setNewMessages] = useState(0);\n  let [askForUserName, setAskforUserName] = useState(true);\n  let [username, setUserName] = useState(\"\");\n  const videoRef = useRef([]);\n  let [videos, setVideos] = useState([]);\n  const getPermissions = async () => {\n    try {\n      const videoPermission = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      if (videoPermission) {\n        setvideoAvailable(true);\n      } else {\n        setvideoAvailable(false);\n      }\n      const audioPermission = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      if (audioPermission) {\n        setaudioAvailable(true);\n      } else {\n        setaudioAvailable(false);\n      }\n      if (navigator.mediaDevices.getDisplayMedia) {\n        setScreenAvailable(true);\n      } else {\n        setScreenAvailable(false);\n      }\n      if (videoAvailable || audioAvailable) {\n        const userMediaStream = await navigator.mediaDevices.getUserMedia({\n          video: videoAvailable,\n          audio: audioAvailable\n        });\n        if (userMediaStream) {\n          window.localStream = userMediaStream;\n          if (localVideoRef.current) {\n            localVideoRef.current.srcObject = userMediaStream;\n          }\n        }\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    getPermissions();\n  }, []);\n  let getUserMediaSuccess = stream => {\n    try {\n      window.localStream.getTracks().forEach(track => track.stop());\n    } catch (e) {\n      console.log(e);\n    }\n    window.localStream = stream;\n    localVideoRef.current.srcObject = stream;\n    for (let id in connections) {\n      if (id === socketIdRef.current) continue;\n      connections[id].addStream(window.localStream);\n      connections[id].createOffer().then(description => {\n        console.log(description);\n        connections[id].setLocalDescription(description).then(() => {\n          socketRef.current.emit('signal', id, JSON.stringify({\n            'sdp': connections[id].localDescription\n          }));\n        }).catch(e => console.log(e));\n      });\n    }\n    stream.getTracks().forEach(track => track.onended = () => {\n      setVideo(false);\n      setAudio(false);\n      try {\n        let tracks = localVideoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      } catch (e) {\n        console.log(e);\n      }\n      let blackSilence = (...args) => new MediaStream([black(...args), silence()]);\n      window.localStream = blackSilence();\n      localVideoRef.current.srcObject = window.localStream;\n      for (let id in connections) {\n        connections[id].addStream(window.localStream);\n        connections[id].createOffer().then(description => {\n          connections[id].setLocalDescription(description).then(() => {\n            socketRef.current.emit('signal', id, JSON.stringify({\n              'sdp': connections[id].localDescription\n            }));\n          }).catch(e => console.log(e));\n        });\n      }\n    });\n  };\n  let silence = () => {\n    let ctx = new AudioContext();\n    let oscillator = ctx.createOscillator();\n    let dst = oscillator.connect(ctx.createMediaStreamDestination());\n    oscillator.start();\n    ctx.resume();\n    return Object.assign(dst.stream.getAudioTracks()[0], {\n      enabled: false\n    });\n  };\n  let black = ({\n    width = 640,\n    height = 480\n  } = {}) => {\n    let canvas = Object.assign(document.createElement(\"canvas\"), {\n      width,\n      height\n    });\n    canvas.getContext('2d').fillRect(0, 0, width, height);\n    let stream = canvas.captureStream();\n    return Object.assign(stream.getVideoTracks()[0], {\n      enabled: false\n    });\n  };\n  let getUserMedia = () => {\n    if (video && videoAvailable || audio && audioAvailable) {\n      navigator.mediaDevices.getUserMedia({\n        video: video,\n        audio: audio\n      }).then(getUserMediaSuccess => {}).then(stream => {}).catch(err => {\n        console.log(err);\n      });\n    } else {\n      try {\n        let tracks = localVideoRef.current.srcObject.getTracks();\n        tracks.forEach(track => track.stop());\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n  useEffect(() => {\n    if (video !== undefined && audio !== undefined) {\n      getUserMedia();\n    }\n  }, [audio, video]);\n  let gotMessageFromServer = (fromId, message) => {\n    var signal = JSON.parse(message);\n    if (fromId !== socketRef.current) {\n      if (signal.sdp) {\n        connections[fromId].setRemoteDescription(new RTCSessionDescription(signal.sdp)).then(() => {\n          if (signal.sdp.type === \"offer\") {\n            connections[fromId].createAnswer().then(description => {\n              connections[fromId].setLocalDescription(description).then(() => {\n                socketIdRef.current.emit(\"signal\", fromId, JSON.stringify({\n                  \"sdp\": connections[fromId].localDescription\n                }));\n              }).catch(e => console.log(e));\n            }).catch(e => console.log(e));\n          }\n        }).catch(e => console.log(e));\n      }\n      if (signal.ice) {\n        connections[fromId].addIceCandidate(new RTCIceCandidate(signal.ice)).catch(e => console.log(e));\n      }\n    }\n  };\n  let addMessages = () => {};\n  let connectToSocketServer = () => {\n    socketRef.current = io.connect(server_url, {\n      secure: false\n    });\n    socketRef.current.on('signal', gotMessageFromServer);\n    socketRef.current.on('connect', () => {\n      socketRef.current.emit('join-call', window.location.href);\n      socketIdRef.current = socketRef.current.id;\n      socketRef.current.on('chat-message', addMessages);\n      socketRef.current.on('user-left', id => {\n        setVideos(videos => videos.filter(video => video.socketId !== id));\n      });\n      socketRef.current.on('user-joined', (id, clients) => {\n        clients.forEach(socketListId => {\n          connections[socketListId] = new RTCPeerConnection(peerConfigConnections);\n          connections[socketListId].onicecandidate = event => {\n            if (event.candidate !== null) {\n              socketRef.current.emit(\"signal\", socketListId, JSON.stringify({\n                'ice': event.candidate\n              }));\n            }\n          };\n          connections[socketListId].onaddstream = event => {\n            let videoExists = videoRef.current.find(video => video.socketId === socketListId);\n            if (videoExists) {\n              setVideo(videos => {\n                const updatedVideos = video.map(video => video.socketId === socketListId ? {\n                  ...video,\n                  stream: event.stream\n                } : video);\n                videoRef.current = updatedVideos;\n                return updatedVideos;\n              });\n            } else {\n              let newVideo = {\n                socketId: socketListId,\n                stream: event.stream,\n                autoPlay: true,\n                playsinline: true\n              };\n              setVideos(videos => {\n                const updatedVideos = [...videos, newVideo];\n                videoRef.current = updatedVideos;\n                return updatedVideos;\n              });\n            }\n          };\n          if (window.localStream !== undefined && window.localStream !== null) {\n            connections[socketListId].addStream(window.localStream);\n          } else {\n            let blackSilence = (...args) => new MediaStream([black(...args), silence()]);\n            window.localStream = blackSilence();\n            connections[socketListId].addStream(window.localStream);\n          }\n        });\n        if (id === socketIdRef.current) {\n          for (let id2 in connections) {\n            if (id2 === socketIdRef.current) continue;\n            try {\n              connections[id2].addStream(window.localStream);\n            } catch (e) {}\n            connections[id2].createOffer().then(description => {\n              connections[id2].setLocalDescription(description).then(() => {\n                socketRef.current.emit(\"signal\", id2, JSON.stringify({\n                  \"sdp\": connections[id2].localDescription\n                }));\n              }).catch(e => console.log(e));\n            });\n          }\n        }\n      });\n    });\n  };\n  let getMedia = () => {\n    setVideo(videoAvailable);\n    setAudio(audioAvailable);\n    connectToSocketServer();\n  };\n  let connect = () => {\n    setAskforUserName(false);\n    getMedia();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: askForUserName === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter into Lobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Username\",\n        value: username,\n        onChange: e => setUserName(e.target.value),\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: connect,\n        variant: \"contained\",\n        children: \"Join Meeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: localVideoRef,\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Videomeetcontainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttoncontainers,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          children: video === true ? /*#__PURE__*/_jsxDEV(VideocamIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 49\n          }, this) : /*#__PURE__*/_jsxDEV(VideocamOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        className: styles.meetusercontainer,\n        ref: localVideoRef,\n        autoPlay: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this), videos.map(video => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"styles.conferenceview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: video.socketId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          \"data-socket\": video.socketId,\n          ref: ref => {\n            if (ref && video.stream) {\n              ref.srcObject = video.stream;\n            }\n          },\n          autoPlay: true,\n          muted: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }, this)]\n      }, video.socketId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 24\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 9\n  }, this);\n}\n_s(VideoMeetComponent, \"t/+9pJMGwrY8f4QfnktTWCmZv6k=\");\n_c = VideoMeetComponent;\nvar _c;\n$RefreshReg$(_c, \"VideoMeetComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","TextField","Button","IconButton","styles","io","jsxDEV","_jsxDEV","server_url","connections","peerConfigConnections","VideoMeetComponent","_s","socketRef","socketIdRef","localVideoRef","videoAvailable","setvideoAvailable","audioAvailable","setaudioAvailable","video","setVideo","audio","setAudio","screen","setScreen","showModel","setModel","screenAvailable","setScreenAvailable","message","setMessage","messages","setMessages","newMessages","setNewMessages","askForUserName","setAskforUserName","username","setUserName","videoRef","videos","setVideos","getPermissions","videoPermission","navigator","mediaDevices","getUserMedia","audioPermission","getDisplayMedia","userMediaStream","window","localStream","current","srcObject","err","console","log","getUserMediaSuccess","stream","getTracks","forEach","track","stop","e","id","addStream","createOffer","then","description","setLocalDescription","emit","JSON","stringify","localDescription","catch","onended","tracks","blackSilence","args","MediaStream","black","silence","ctx","AudioContext","oscillator","createOscillator","dst","connect","createMediaStreamDestination","start","resume","Object","assign","getAudioTracks","enabled","width","height","canvas","document","createElement","getContext","fillRect","captureStream","getVideoTracks","undefined","gotMessageFromServer","fromId","signal","parse","sdp","setRemoteDescription","RTCSessionDescription","type","createAnswer","ice","addIceCandidate","RTCIceCandidate","addMessages","connectToSocketServer","secure","on","location","href","filter","socketId","clients","socketListId","RTCPeerConnection","onicecandidate","event","candidate","onaddstream","videoExists","find","updatedVideos","map","newVideo","autoPlay","playsinline","id2","getMedia","children","fileName","_jsxFileName","lineNumber","columnNumber","label","value","onChange","target","variant","onClick","ref","muted","className","Videomeetcontainer","buttoncontainers","VideocamIcon","VideocamOff","meetusercontainer","_c","$RefreshReg$"],"sources":["P:/ZOOM/frontend/src/pages/VideoMeet.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { TextField , Button, IconButton } from '@mui/material';\r\nimport styles from \"../styles/VideoMeetComponentmodule.css\"\r\nimport io from \"socket.io-client\"\r\n\r\n// import server from '../environment'\r\n// import { connect } from 'mongoose';\r\n// import { connectToSocket } from '../../../backend/src/controller/socketManager';\r\nconst server_url=\"http://localhost:8000\"\r\nvar connections={};\r\nconst peerConfigConnections={\r\n    \"iceServers\":[\r\n        {\"urls\":\"stun:stun.l.google.com:19032\"}\r\n    ]\r\n}\r\nexport default function VideoMeetComponent() {\r\n    var socketRef=useRef();\r\n    let socketIdRef=useRef();\r\n    let localVideoRef=useRef()\r\n    let [videoAvailable , setvideoAvailable]=useState(true);\r\n    let [audioAvailable , setaudioAvailable]=useState(true);\r\n    let [video , setVideo]=useState([]);\r\n    let [audio , setAudio]=useState();\r\n    let [screen , setScreen]=useState();\r\n    let [showModel , setModel]=useState();\r\n    let [screenAvailable , setScreenAvailable]=useState();\r\n    let [message , setMessage]=useState(\"\");\r\n    let [messages , setMessages]=useState([]);\r\n    let [newMessages , setNewMessages]=useState(0);\r\n    let [askForUserName, setAskforUserName]=useState(true);\r\n    let [username , setUserName]=useState(\"\");\r\n    const videoRef = useRef([]);\r\n    let [videos , setVideos]=useState([])\r\n\r\n    const getPermissions = async()=>{\r\n        try{\r\n            const videoPermission=await navigator.mediaDevices.getUserMedia({video:true})\r\n            if(videoPermission){\r\n                setvideoAvailable(true)\r\n            }else{\r\n                setvideoAvailable(false)\r\n            }\r\n            const audioPermission=await navigator.mediaDevices.getUserMedia({audio:true})\r\n            if(audioPermission){\r\n                setaudioAvailable(true)\r\n            }else{\r\n                setaudioAvailable(false);\r\n            }\r\n            if(navigator.mediaDevices.getDisplayMedia){\r\n                setScreenAvailable(true)\r\n            }else{\r\n                setScreenAvailable(false);\r\n            }\r\n            if(videoAvailable || audioAvailable){\r\n                const userMediaStream=await navigator.mediaDevices.getUserMedia({video:videoAvailable , audio:audioAvailable})\r\n                if(userMediaStream){\r\n                    window.localStream =userMediaStream\r\n                    if(localVideoRef.current){\r\n                        localVideoRef.current.srcObject=userMediaStream\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n\r\n        }catch (err){\r\n            console.log(err);\r\n\r\n        }\r\n\r\n    }\r\nuseEffect(()=>{\r\n    getPermissions()\r\n},[])\r\n let getUserMediaSuccess = (stream) => {\r\n        try {\r\n            window.localStream.getTracks().forEach(track => track.stop())\r\n        } catch (e) { console.log(e) }\r\n\r\n        window.localStream = stream\r\n        \r\n        localVideoRef.current.srcObject = stream\r\n\r\n        for (let id in connections) {\r\n            if (id === socketIdRef.current) continue\r\n\r\n            connections[id].addStream(window.localStream)\r\n\r\n            connections[id].createOffer().then((description) => {\r\n                console.log(description)\r\n                connections[id].setLocalDescription(description)\r\n                    .then(() => {\r\n                        socketRef.current.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\r\n                    })\r\n                    .catch(e => console.log(e))\r\n            })\r\n        }\r\n\r\n        stream.getTracks().forEach(track => track.onended = () => {\r\n            setVideo(false);\r\n            setAudio(false);\r\n\r\n            try {\r\n                let tracks = localVideoRef.current.srcObject.getTracks()\r\n                tracks.forEach(track => track.stop())\r\n            } catch (e) { console.log(e) }\r\n\r\n            let blackSilence = (...args) => new MediaStream([black(...args), silence()])\r\n            window.localStream = blackSilence()\r\n            localVideoRef.current.srcObject = window.localStream\r\n\r\n            for (let id in connections) {\r\n                connections[id].addStream(window.localStream)\r\n\r\n                connections[id].createOffer().then((description) => {\r\n                    connections[id].setLocalDescription(description)\r\n                        .then(() => {\r\n                            socketRef.current.emit('signal', id, JSON.stringify({ 'sdp': connections[id].localDescription }))\r\n                        })\r\n                        .catch(e => console.log(e))\r\n                })\r\n            }\r\n        })\r\n    }\r\n let silence = () => {\r\n        let ctx = new AudioContext()\r\n        let oscillator = ctx.createOscillator()\r\n        let dst = oscillator.connect(ctx.createMediaStreamDestination())\r\n        oscillator.start()\r\n        ctx.resume()\r\n        return Object.assign(dst.stream.getAudioTracks()[0], { enabled: false })\r\n    }\r\n    let black = ({ width = 640, height = 480 } = {}) => {\r\n        let canvas = Object.assign(document.createElement(\"canvas\"), { width, height })\r\n        canvas.getContext('2d').fillRect(0, 0, width, height)\r\n        let stream = canvas.captureStream()\r\n        return Object.assign(stream.getVideoTracks()[0], { enabled: false })\r\n    }\r\n\r\n\r\n\r\n\r\nlet getUserMedia=()=>{\r\n    if((video && videoAvailable) || (audio &&audioAvailable)){\r\n        navigator.mediaDevices.getUserMedia({video:video , audio:audio})\r\n        .then((getUserMediaSuccess)=>{})\r\n        .then((stream)=>{})\r\n        .catch((err)=>{console.log(err)});\r\n    }else{\r\n        try{\r\n            let tracks = localVideoRef.current.srcObject.getTracks();\r\n            tracks.forEach(track => track.stop()\r\n                \r\n            );\r\n        }catch (err){\r\n            console.log(err);\r\n\r\n        }\r\n    }\r\n}\r\nuseEffect(()=>{\r\n    if(video !== undefined && audio !== undefined ){\r\n        getUserMedia()\r\n    }\r\n},[audio,video])\r\nlet gotMessageFromServer=(fromId , message)=>{\r\n    var signal=JSON.parse(message)\r\n    if(fromId !== socketRef.current){\r\n        if(signal.sdp){\r\n            connections[fromId].setRemoteDescription(new RTCSessionDescription(signal.sdp)).then(()=>{\r\n                if(signal.sdp.type === \"offer\"){\r\n                    connections[fromId].createAnswer().then((description)=>{\r\n                        connections[fromId].setLocalDescription(description).then(()=>{\r\n                            socketIdRef.current.emit(\"signal\", fromId, JSON.stringify({\"sdp\":connections[fromId].localDescription}))\r\n                        }).catch(e=> console.log(e))\r\n                        \r\n                    }).catch(e=> console.log(e))\r\n                }\r\n            }).catch(e=> console.log(e))\r\n        }\r\n        if(signal.ice){\r\n            connections[fromId].addIceCandidate(new RTCIceCandidate(signal.ice)).catch(e=>console.log(e));\r\n        }\r\n\r\n    }\r\n\r\n\r\n}\r\nlet addMessages=()=>{\r\n\r\n}\r\n  let connectToSocketServer = () => {\r\n        socketRef.current = io.connect(server_url, { secure: false })\r\n        socketRef.current.on('signal', gotMessageFromServer);\r\n        socketRef.current.on('connect',()=>{\r\n            socketRef.current.emit('join-call',window.location.href)\r\n            socketIdRef.current=socketRef.current.id \r\n            socketRef.current.on('chat-message',addMessages);\r\n            socketRef.current.on('user-left',(id)=>{\r\n                setVideos((videos)=>videos.filter((video)=>video.socketId !== id))\r\n            })\r\n            \r\n            socketRef.current.on('user-joined',(id , clients)=>{\r\n                clients.forEach((socketListId)=>{\r\n                    connections[socketListId]=new RTCPeerConnection(peerConfigConnections)\r\n                    connections[socketListId].onicecandidate=(event)=>{\r\n                        if(event.candidate !== null){\r\n                            socketRef.current.emit(\"signal\",socketListId , JSON.stringify({'ice':event.candidate}))\r\n\r\n                        }\r\n                    }\r\n                    connections[socketListId].onaddstream = (event)=>{\r\n                        let videoExists = videoRef.current.find(video=> video.socketId === socketListId);\r\n\r\n                        if(videoExists){\r\n                            setVideo(videos=>{\r\n                                const updatedVideos = video.map(video=>\r\n                                    video.socketId === socketListId ? { ...video , stream:event.stream} :video\r\n                                )\r\n                                videoRef.current=updatedVideos;\r\n                                return updatedVideos;\r\n                            })\r\n                        }else{\r\n                            let newVideo={\r\n                                socketId:socketListId,\r\n                                stream:event.stream,\r\n                                autoPlay:true,\r\n                                playsinline:true\r\n                            }\r\n                            setVideos(videos=>{\r\n                                const updatedVideos=[ ...videos, newVideo];\r\n                                videoRef.current=updatedVideos;\r\n                                return updatedVideos;\r\n                            });\r\n                        }\r\n                    };\r\n                    if(window.localStream !== undefined && window.localStream !== null){\r\n                        connections[socketListId].addStream(window.localStream);\r\n                    }else{\r\n                        let blackSilence = ( ...args)=> new MediaStream([black( ...args),silence()])\r\n                        window.localStream=blackSilence();\r\n                        connections[socketListId].addStream(window.localStream)\r\n\r\n\r\n\r\n                    }\r\n                })\r\n                if(id === socketIdRef.current){\r\n                    for(let id2 in connections){\r\n                        if(id2 === socketIdRef.current) continue\r\n                        try{\r\n                            connections[id2].addStream(window.localStream)\r\n                        }catch(e){\r\n\r\n                        }\r\n                        connections[id2].createOffer().then((description)=>{\r\n                            connections[id2].setLocalDescription(description)\r\n                            .then(()=>{\r\n                                socketRef.current.emit(\"signal\",id2 , JSON.stringify({\"sdp\":connections[id2].localDescription}))\r\n                            })\r\n                            .catch((e)=>console.log(e))\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n        })\r\n  }\r\n \r\nlet getMedia=()=>{\r\n    setVideo(videoAvailable);\r\n    setAudio(audioAvailable);\r\n    connectToSocketServer();\r\n}\r\nlet connect = () => {\r\n        setAskforUserName(false);\r\n        getMedia();\r\n    }\r\n\r\n\r\n\r\n    return ( \r\n        \r\n        <div>\r\n            {askForUserName===true?\r\n            <div>\r\n                <h2>Enter into Lobby</h2>\r\n                <TextField id=\"outlined-basic\" label=\"Username\" value={username} onChange={e => setUserName(e.target.value)}  variant=\"outlined\" />\r\n                <Button onClick={connect} variant=\"contained\">Join Meeting</Button>\r\n                <div>\r\n                    <video  ref={localVideoRef} autoPlay muted ></video>\r\n                    </div>\r\n                </div>:<div className={styles.Videomeetcontainer}>\r\n                    <div className={styles.buttoncontainers}>\r\n                        <IconButton>\r\n                            {(video === true) ? <VideocamIcon/> : <VideocamOff/>}\r\n                        </IconButton>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <video className={styles.meetusercontainer} ref={localVideoRef} autoPlay muted ></video>\r\n                {videos.map((video)=>(\r\n                    <div className='styles.conferenceview' key={video.socketId} >\r\n                        <h2>{video.socketId}</h2>\r\n                        <video\r\n                         data-socket ={video.socketId}\r\n                        ref={ref=>{\r\n                            if(ref && video.stream){\r\n                                ref.srcObject=video.stream;\r\n                            }\r\n                        }}\r\n                        autoPlay muted\r\n                        >\r\n                            </video>\r\n\r\n                    </div>\r\n                ))}\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n        \r\n     );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}